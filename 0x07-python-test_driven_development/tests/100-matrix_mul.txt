# Test cases for matrix_mul function

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

# Test case 1: Valid matrix multiplication
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

# Test case 2: Valid matrix multiplication with different dimensions
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

# Test case 3: Empty matrix m_a (should raise ValueError)
>>> matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty

# Test case 4: Empty matrix m_b (should raise ValueError)
>>> matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
    ...
ValueError: m_b can't be empty

# Test case 5: Invalid matrix m_a (contains a string)
>>> matrix_mul([[1, 2], ['a', 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats

# Test case 6: Invalid matrix m_b (contains a string)
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 'b']])
Traceback (most recent call last):
    ...
TypeError: m_b should contain only integers or floats

# Test case 7: Non-rectangular matrix m_a (should raise TypeError)
>>> matrix_mul([[1, 2, 3], [4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: each row of m_a must be of the same size

# Test case 8: Non-rectangular matrix m_b (should raise TypeError)
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5]])
Traceback (most recent call last):
    ...
TypeError: each row of m_b must be of the same size

# Test case 9: Incompatible matrix dimensions (should raise ValueError)
>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

# Test case 10: Matrix multiplication with negative numbers
>>> matrix_mul([[1, -2], [-3, 4]], [[1, 2], [3, -4]])
[[-5, 10], [9, -22]]
